<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account confirmed. Your password has been changed" xml:space="preserve">
    <value>账户确认。您的密码已被更改</value>
  </data>
  <data name="Candidate created successfully" xml:space="preserve">
    <value>候选人创建成功</value>
  </data>
  <data name="Candidate deleted successfully" xml:space="preserve">
    <value>候选人删除成功</value>
  </data>
  <data name="Candidate updated successfully" xml:space="preserve">
    <value>候选人更新成功</value>
  </data>
  <data name="Confirmation failed" xml:space="preserve">
    <value>确认失败</value>
  </data>
  <data name="Editing was successful" xml:space="preserve">
    <value>编辑成功</value>
  </data>
  <data name="Employees assigned correctly" xml:space="preserve">
    <value>正确分配的员工</value>
  </data>
  <data name="Error adding HR note to candidate" xml:space="preserve">
    <value>向候选人添加 HR 注释时出错</value>
  </data>
  <data name="Error adding tech note to candidate" xml:space="preserve">
    <value>向候选人添加技术说明时出错</value>
  </data>
  <data name="Error assigning interview date" xml:space="preserve">
    <value>分配面试日期时出错</value>
  </data>
  <data name="Error assigning tech interview date" xml:space="preserve">
    <value>分配技术面试日期时出错</value>
  </data>
  <data name="Error creating candidate (invalid recruitmentId)" xml:space="preserve">
    <value>创建候选人时出错（无效的招聘 ID）</value>
  </data>
  <data name="Error creating candidate (one or more invalid parameters)" xml:space="preserve">
    <value>创建候选者时出错（一个或多个无效参数）</value>
  </data>
  <data name="Error creating interview" xml:space="preserve">
    <value>创建采访时出错</value>
  </data>
  <data name="Error deleting candidate" xml:space="preserve">
    <value>删除候选人时出错</value>
  </data>
  <data name="Error deleting interview" xml:space="preserve">
    <value>删除采访时出错</value>
  </data>
  <data name="Error deleting recruitment" xml:space="preserve">
    <value>删除招聘时出错</value>
  </data>
  <data name="Error editing interview" xml:space="preserve">
    <value>编辑采访时出错</value>
  </data>
  <data name="Error ending recruitment" xml:space="preserve">
    <value>结束招聘时出错</value>
  </data>
  <data name="Error getting candidate (bad parameters or candidate doesn't exist)" xml:space="preserve">
    <value>获取候选人时出错（错误的参数或候选人不存在）</value>
  </data>
  <data name="Error getting list of recruitments" xml:space="preserve">
    <value>获取招聘列表时出错</value>
  </data>
  <data name="Error saving object to database" xml:space="preserve">
    <value>将对象保存到数据库时出错</value>
  </data>
  <data name="Error updating candidate" xml:space="preserve">
    <value>更新候选人时出错</value>
  </data>
  <data name="Error updating candidate when allocating recruiters" xml:space="preserve">
    <value>分配招聘人员时更新候选人时出错</value>
  </data>
  <data name="Error updating recruitment" xml:space="preserve">
    <value>更新招聘时出错</value>
  </data>
  <data name="Error while deleting skill!" xml:space="preserve">
    <value>删除技能时出错！</value>
  </data>
  <data name="Error while deleting the user" xml:space="preserve">
    <value>删除用户时出错</value>
  </data>
  <data name="Error while updating the user" xml:space="preserve">
    <value>更新用户时出错</value>
  </data>
  <data name="Interview created successfully" xml:space="preserve">
    <value>面试创建成功</value>
  </data>
  <data name="Interview date set correctly" xml:space="preserve">
    <value>面试日期设置正确</value>
  </data>
  <data name="Interview deleted successfully" xml:space="preserve">
    <value>采访删除成功</value>
  </data>
  <data name="Interview edited successfully" xml:space="preserve">
    <value>采访编辑成功</value>
  </data>
  <data name="Interview note added successfully" xml:space="preserve">
    <value>面试笔记添加成功</value>
  </data>
  <data name="No Interview with this Id" xml:space="preserve">
    <value>没有采访这个ID</value>
  </data>
  <data name="No user with given Id found" xml:space="preserve">
    <value>未找到具有给定 ID 的用户</value>
  </data>
  <data name="Not found" xml:space="preserve">
    <value>未找到</value>
  </data>
  <data name="Password Changed" xml:space="preserve">
    <value>密码已更改</value>
  </data>
  <data name="Recovery e-mail sent" xml:space="preserve">
    <value>已发送恢复电子邮件</value>
  </data>
  <data name="Recruitment created successfully" xml:space="preserve">
    <value>招聘创建成功</value>
  </data>
  <data name="Recruitment deleted successfully" xml:space="preserve">
    <value>招聘已成功删除</value>
  </data>
  <data name="Recruitment edited successfully" xml:space="preserve">
    <value>招聘编辑成功</value>
  </data>
  <data name="Recruitment ended successfully" xml:space="preserve">
    <value>招聘成功结束</value>
  </data>
  <data name="Skill added successfully" xml:space="preserve">
    <value>技能添加成功</value>
  </data>
  <data name="Skill deleted successfully" xml:space="preserve">
    <value>技能删除成功</value>
  </data>
  <data name="Skill updated successfully" xml:space="preserve">
    <value>技能更新成功</value>
  </data>
  <data name="Skill with that name already exists!" xml:space="preserve">
    <value>那个名字的技能已经存在了！</value>
  </data>
  <data name="Tech interview date set correctly" xml:space="preserve">
    <value>技术面试日期设置正确</value>
  </data>
  <data name="Tech interview note added correctly" xml:space="preserve">
    <value>技术面试笔记已正确添加</value>
  </data>
  <data name="There is no recruitment with such Id" xml:space="preserve">
    <value>没有使用此 ID 的招聘</value>
  </data>
  <data name="There is no such skill!" xml:space="preserve">
    <value>没有这样的技能！</value>
  </data>
  <data name="This skill is currently used in one of the recruitments. You can't delete it." xml:space="preserve">
    <value>该技能目前在其中一个招聘中使用。你不能删除它。</value>
  </data>
  <data name="User already exists" xml:space="preserve">
    <value>用户已存在</value>
  </data>
  <data name="User and Guid don't have the same owner" xml:space="preserve">
    <value>用户和 Guid 的所有者不同</value>
  </data>
  <data name="User created successfully" xml:space="preserve">
    <value>用户创建成功</value>
  </data>
  <data name="User deleted successfully" xml:space="preserve">
    <value>用户删除成功</value>
  </data>
  <data name="Wrong credentials!" xml:space="preserve">
    <value>证件错误</value>
  </data>
  <data name="Wrong data!" xml:space="preserve">
    <value>数据错误</value>
  </data>
</root>